name: R-CMD-check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  R-CMD-check:
    name: R CMD check (R: ${{ matrix.config.r }}, OS: ${{ matrix.config.os }})
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { os: ubuntu-latest, r: "release" }
          - { os: windows-latest, r: "release" }
          - { os: macOS-latest, r: "release" }
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - name: Install system dependencies (Linux only)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev libcurl4-openssl-dev libxml2-dev

      - name: Install package dependencies
        run: |
          install.packages(c("devtools", "roxygen2", "testthat", "reticulate"), repos = "https://cloud.r-project.org")

      - name: Configure Python for reticulate
        run: |
          # 如果本地没有 Python 环境，则安装 miniconda
          Rscript -e "if(!reticulate::py_available(initialize = TRUE)) reticulate::install_miniconda()"
      
      - name: Install additional Python packages
        run: |
          Rscript -e "reticulate::py_install(c('xarray', 'pandas', 'numpy', 'netCDF4', 'dask'), envname = reticulate::miniconda_path(), pip = TRUE)"
      
      - name: Build package tarball
        run: |
          R CMD build .
      
      - name: Run R CMD check
        run: |
          PKG_TARBALL=$(ls *.tar.gz)
          R CMD check "$PKG_TARBALL" --as-cran --no-manual
